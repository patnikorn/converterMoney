{"version":3,"sources":["converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","state","currencies","base","amount","convertTo","result","date","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","fetch","then","res","json","data","rates","toFixed","handleSwap","preventDefault","this","className","type","onChange","map","currency","disabled","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61fc00bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    currencies: [\"USD\", \"AUD\", \"SGD\", \"PHP\", \"EUR\"],\r\n    base: \"USD\",\r\n    amount: \"\",\r\n    convertTo: \"EUR\",\r\n    result: \"\",\r\n    date: \"\"\r\n  };\r\n\r\n  handleSelect = e => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n        result: null\r\n      },\r\n      this.calculate\r\n    );\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState(\r\n      {\r\n        amount: e.target.value,\r\n        result: null,\r\n        date: null\r\n      },\r\n      this.calculate\r\n    );\r\n  };\r\n\r\n  calculate = () => {\r\n    const amount = this.state.amount;\r\n    if (amount === isNaN) {\r\n      return;\r\n    } else {\r\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const date = data.date;\r\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\r\n          this.setState({\r\n            result,\r\n            date\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSwap = e => {\r\n    const base = this.state.base;\r\n    const convertTo = this.state.convertTo;\r\n    e.preventDefault();\r\n    this.setState(\r\n      {\r\n        convertTo: base,\r\n        base: convertTo,\r\n        result: null\r\n      },\r\n      this.calculate\r\n    );\r\n  };\r\n  render() {\r\n    const { currencies, base, amount, convertTo, result, date } = this.state;\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6 mx-auto\">\r\n            <div className=\"card card-body\">\r\n              <h5>\r\n                {amount} {base} เทียบเท่ากับ\r\n              </h5>\r\n              <h2>\r\n                {amount === \"\"\r\n                  ? \"0\"\r\n                  : result === null\r\n                  ? \"Calculating...\"\r\n                  : result}{\" \"}\r\n                {convertTo}\r\n              </h2>\r\n              <p>ณ ขณะนี้ {amount === \"\" ? \"/ / /\" : date === null ? \"\" : date}</p>\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-10\">\r\n                  <form className=\"form-inline mb-4\">\r\n                    <input\r\n                      type=\"number\"\r\n                      value={amount}\r\n                      onChange={this.handleInput}\r\n                      className=\"form-control form-control-lg mx-3\"\r\n                    />\r\n                    <select\r\n                      name=\"base\"\r\n                      value={base}\r\n                      onChange={this.handleSelect}\r\n                      className=\"form-control form-control-lg\"\r\n                    >\r\n                      {currencies.map(currency => (\r\n                        <option key={currency} value={currency}>\r\n                          {currency}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n\r\n                  <form className=\"form-inline mb-4\">\r\n                    <input\r\n                      disabled={true}\r\n                      value={\r\n                        amount === \"\"\r\n                          ? \"0\"\r\n                          : result === null\r\n                          ? \"Calculating...\"\r\n                          : result\r\n                      }\r\n                      className=\"form-control form-control-lg mx-3\"\r\n                    />\r\n                    <select\r\n                      name=\"convertTo\"\r\n                      value={convertTo}\r\n                      onChange={this.handleSelect}\r\n                      className=\"form-control form-control-lg\"\r\n                    >\r\n                      {currencies.map(currency => (\r\n                        <option key={currency} value={currency}>\r\n                          {currency}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n\r\n                <div className=\"col-lg-2 align-self-center\">\r\n                  <h1 onClick={this.handleSwap} className=\"swap\">\r\n                    &#8595;&#8593;\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import './App.css';\nimport Converter from './converter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}